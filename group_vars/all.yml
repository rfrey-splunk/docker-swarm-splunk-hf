# both docker_image_build and docker_service_deploy need access, so these aren't in role/vars

# hosts that aren't docker_build_images get empty role_volumes
role_volumes: []
common_volumes: []
host_volumes: []
volumes: "{{ role_volumes + common_volumes + host_volumes }}"

docker_image_name: "{{ image_name | default(inventory_hostname) }}"
repository: "{{ registry }}{{ repository_path }}"
# multiple build variants are pushed, so repository_push_image references build_vars.tag
repository_push_image: "{% if repository is defined %}{{ repository }}/{% endif %}{{ docker_image_name }}:{{ build_vars.tag }}"
# but only one build variant (the one with the unaltered tag) is deployed, so repository_deploy_image references only version
repository_deploy_image: "{% if repository is defined %}{{ repository }}/{% endif %}{{ docker_image_name }}:{{ version }}"

default_metrics_healthchecks: |
  {% if healthcheck_metrics_series is defined %}
    - group: "{{ healthcheck_metrics_group }}"
      series: "{{ healthcheck_metrics_series }}"
      allowed_age_seconds: {{ healthcheck_allowed_age_seconds }}
  {% else %}
    []
  {% endif %}

# override metrics_healthchecks if you need multiple healthchecks
metrics_healthchecks: "{{ default_metrics_healthchecks|from_yaml }}"

# create a config for healthcheck to be converted to json
metrics_healthcheck_config:
    path: "{{ splunk_home }}/var/log/splunk"
    checks: "{{ metrics_healthchecks }}"

# content needs to be in a predictable state, so force sorting when converting to json
metrics_healthcheck_config_json: "{{ metrics_healthcheck_config | to_json(sort_keys=True, indent=2) }}"

# this name needs to correspond to the template filename metrics_healthcheck/metrics_healthcheck_config.json
metrics_healthcheck_config_filename: "{{ splunk_home }}/metrics_healthcheck_config.json"

# role_docker_configs are used by docker_service_deploy and docker_image_build
role_docker_configs:
    - name: "{{ inventory_hostname }}_healthcheck_config"
      filename: "{{ metrics_healthcheck_config_filename }}"
      uid: "{{ splunk_user_id }}"
      gid: "{{ splunk_group_id }}"
      # if content exists a docker config will be created/updated
      # if not, an already-defined docker config will be used
      # "| string" to prevent ansible from attempting to interpret the json as an object
      content: "{{ metrics_healthcheck_config_json | string }}"

# combine role, common, and host docker configs
docker_configs: "{{ role_docker_configs + common_docker_configs + host_docker_configs }}"

role_build_variants:
  - build_vars:
      primary_build: true
      tag: "{{ version }}"
      push_when: "{{ true }}"
  - build_vars:
      primary_build: false
      tag: "{{ version }}-standalone"

# skip_build_and_push is overrideable by using the skip-if-in-registry tag, but defaults to false to always perform the build
skip_build_and_push: false
# Pull images on all docker hosts when running deploy.yml. Required for ECR authentication.
pull_images: false
